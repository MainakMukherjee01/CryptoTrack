{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanda\\\\Documents\\\\GitHub\\\\crypto-react-app\\\\src\\\\components\\\\Chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n// import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js'\n// ChartJS.register(\n//     CategoryScale,\n//     LinearScale,\n//     PointElement,\n//     LineElement,\n//     Title,\n//     Tooltip,\n//     Legend\n// );\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = _ref => {\n  let {\n    arr = [],\n    currency,\n    days\n  } = _ref;\n  const prices = [];\n  const date = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (days === \"24h\") date.push(new Date(arr[i][0]).toLocaleTimeString());else date.push(new Date(arr[i][0]).toLocaleDateString());\n    prices.push(arr[i][1]);\n  }\n  const data = {\n    label: `price in ${currency}`,\n    data: prices,\n    borderColor: 'rgb(255,99,132)',\n    backgroundColor: 'rgba(255,99,132,0.5)'\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: {\n      responsive: true\n    },\n    data: {\n      labels: date,\n      datasets: [data]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","Chart","_ref","arr","currency","days","prices","date","i","length","push","Date","toLocaleTimeString","toLocaleDateString","data","label","borderColor","backgroundColor","options","responsive","labels","datasets","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nanda/Documents/GitHub/crypto-react-app/src/components/Chart.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n// import { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js'\r\n// ChartJS.register(\r\n//     CategoryScale,\r\n//     LinearScale,\r\n//     PointElement,\r\n//     LineElement,\r\n//     Title,\r\n//     Tooltip,\r\n//     Legend\r\n// );\r\nconst Chart = ({ arr = [], currency, days }) => {\r\n    const prices = [];\r\n    const date = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (days === \"24h\")\r\n            date.push(new Date(arr[i][0]).toLocaleTimeString());\r\n        else\r\n            date.push(new Date(arr[i][0]).toLocaleDateString());\r\n        prices.push(arr[i][1]);\r\n\r\n    }\r\n    const data = {\r\n        label: `price in ${currency}`,\r\n        data: prices,\r\n        borderColor: 'rgb(255,99,132)',\r\n        backgroundColor: 'rgba(255,99,132,0.5)',\r\n    };\r\n    return (\r\n        <Line\r\n            options={{\r\n                responsive: true,\r\n            }}\r\n            data={{\r\n                labels: date,\r\n                datasets: [\r\n                    data\r\n                ]\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Chart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGC,IAAA,IAAkC;EAAA,IAAjC;IAAEC,GAAG,GAAG,EAAE;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAH,IAAA;EACvC,MAAMI,MAAM,GAAG,EAAE;EACjB,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,IAAIH,IAAI,KAAK,KAAK,EACdE,IAAI,CAACG,IAAI,CAAC,IAAIC,IAAI,CAACR,GAAG,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAEpDL,IAAI,CAACG,IAAI,CAAC,IAAIC,IAAI,CAACR,GAAG,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,kBAAkB,CAAC,CAAC,CAAC;IACvDP,MAAM,CAACI,IAAI,CAACP,GAAG,CAACK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAE1B;EACA,MAAMM,IAAI,GAAG;IACTC,KAAK,EAAG,YAAWX,QAAS,EAAC;IAC7BU,IAAI,EAAER,MAAM;IACZU,WAAW,EAAE,iBAAiB;IAC9BC,eAAe,EAAE;EACrB,CAAC;EACD,oBACIjB,OAAA,CAACF,IAAI;IACDoB,OAAO,EAAE;MACLC,UAAU,EAAE;IAChB,CAAE;IACFL,IAAI,EAAE;MACFM,MAAM,EAAEb,IAAI;MACZc,QAAQ,EAAE,CACNP,IAAI;IAEZ;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAC,EAAA,GA9BKzB,KAAK;AAgCX,eAAeA,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}