{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanda\\\\Documents\\\\GitHub\\\\crypto-react-app\\\\src\\\\components\\\\Exchanges.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, HStack } from 'react';\nimport axios from 'axios';\nimport { server } from '../index';\nimport { Container } from '@chakra-ui/react';\nimport Loader from './Loader.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Exchanges = () => {\n  _s();\n  const [exchanges, setExchanges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchExchanges = async () => {\n      const {\n        data\n      } = await axios.get(`${server}/exchanges`);\n      console.log(data);\n      setExchanges(data);\n      setLoading(false);\n      console.log(data[0].name);\n    };\n    fetchExchanges();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: 'container.xl',\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 53\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(HStack, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Exchanges, \"rUm9IaakodPFXyAe+FWSvzHV8k4=\");\n_c = Exchanges;\nexport default Exchanges;\nvar _c;\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"names":["React","useEffect","useState","HStack","axios","server","Container","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","Exchanges","_s","exchanges","setExchanges","loading","setLoading","fetchExchanges","data","get","console","log","name","maxW","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nanda/Documents/GitHub/crypto-react-app/src/components/Exchanges.jsx"],"sourcesContent":["import React, { useEffect, useState, HStack } from 'react';\r\nimport axios from 'axios';\r\nimport { server } from '../index';\r\nimport { Container } from '@chakra-ui/react';\r\nimport Loader from './Loader.jsx'\r\nconst Exchanges = () => {\r\n\r\n    const [exchanges, setExchanges] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        const fetchExchanges = async () => {\r\n            const { data } = await axios.get(`${server}/exchanges`);\r\n            console.log(data);\r\n            setExchanges(data);\r\n            setLoading(false);\r\n            console.log(data[0].name);\r\n        };\r\n        fetchExchanges();\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxW={'container.xl'}>{loading ? <Loader /> : <>\r\n            <HStack>\r\n                {/* {exchanges.map((i) => {\r\n                    <div>{i.name}</div>\r\n                })} */}\r\n            </HStack>\r\n        </>}</Container>\r\n    )\r\n}\r\n\r\nexport default Exchanges"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5CD,SAAS,CAAC,MAAM;IACZ,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEf,MAAO,YAAW,CAAC;MACvDgB,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBJ,YAAY,CAACI,IAAI,CAAC;MAClBF,UAAU,CAAC,KAAK,CAAC;MACjBI,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,IAAI,CAAC;IAC7B,CAAC;IACDL,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACH,SAAS;IAACkB,IAAI,EAAE,cAAe;IAAAC,QAAA,EAAET,OAAO,gBAAGP,OAAA,CAACF,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGpB,OAAA,CAAAE,SAAA;MAAAc,QAAA,eACrDhB,OAAA,CAACN,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIC;IAAC,gBACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAExB,CAAC;AAAAhB,EAAA,CAxBKD,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AA0Bf,eAAeA,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}