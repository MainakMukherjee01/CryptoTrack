{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanda\\\\Documents\\\\GitHub\\\\crypto-react-app\\\\src\\\\components\\\\Chart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Chart = _ref => {\n  let {\n    arr = [],\n    currency,\n    days\n  } = _ref;\n  const prices = [1, 2, 34];\n  const date = ['12/2/22', '23/2/23', '32,2,33'];\n  const data = {\n    labels: date\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: {\n      responsive: true\n    },\n    data: {\n      labels: date,\n      datasets: [{\n        label: `price in ${currency}`\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","_ref","arr","currency","days","prices","date","data","labels","options","responsive","datasets","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nanda/Documents/GitHub/crypto-react-app/src/components/Chart.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js'\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\nconst Chart = ({ arr = [], currency, days }) => {\r\n    const prices = [1, 2, 34];\r\n    const date = ['12/2/22', '23/2/23', '32,2,33']\r\n\r\n    const data = {\r\n        labels: date,\r\n    };\r\n    return (\r\n        <Line\r\n            options={{\r\n                responsive: true,\r\n            }}\r\n            data={{\r\n                labels: date,\r\n                datasets: [\r\n                    {\r\n                        label: `price in ${currency}`\r\n                    }\r\n                ]\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Chart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1HT,OAAO,CAACU,QAAQ,CACZT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;AACD,MAAMR,KAAK,GAAGY,IAAA,IAAkC;EAAA,IAAjC;IAAEC,GAAG,GAAG,EAAE;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAH,IAAA;EACvC,MAAMI,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EACzB,MAAMC,IAAI,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAE9C,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAEF;EACZ,CAAC;EACD,oBACIP,OAAA,CAACX,IAAI;IACDqB,OAAO,EAAE;MACLC,UAAU,EAAE;IAChB,CAAE;IACFH,IAAI,EAAE;MACFC,MAAM,EAAEF,IAAI;MACZK,QAAQ,EAAE,CACN;QACIC,KAAK,EAAG,YAAWT,QAAS;MAChC,CAAC;IAET;EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAC,EAAA,GAtBK5B,KAAK;AAwBX,eAAeA,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}