{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanda\\\\Documents\\\\GitHub\\\\crypto-react-app\\\\src\\\\components\\\\Exchanges.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { server } from '../index';\nimport { Container, HStack } from '@chakra-ui/react';\nimport Loader from './Loader.jsx';\nimport ExchangeCard from './ExchangeCard.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exchanges = () => {\n  _s();\n  const [exchanges, setExchanges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchExchanges = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${server}/exchanges`);\n        setExchanges(data);\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n    fetchExchanges();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: 'container.xl',\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 53\n    }, this) : /*#__PURE__*/_jsxDEV(HStack, {\n      wrap: 'wrap',\n      children: exchanges.map(i => /*#__PURE__*/_jsxDEV(ExchangeCard, {\n        name: i.name,\n        img: i.image,\n        rank: i.trust_score_rank,\n        url: i.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Exchanges, \"u1h+IXvXMHejUzODYvcs5Zx2f4I=\");\n_c = Exchanges;\nexport default Exchanges;\nvar _c;\n$RefreshReg$(_c, \"Exchanges\");","map":{"version":3,"names":["React","useEffect","useState","axios","server","Container","HStack","Loader","ExchangeCard","jsxDEV","_jsxDEV","Exchanges","_s","exchanges","setExchanges","loading","setLoading","error","setError","fetchExchanges","data","get","maxW","children","fileName","_jsxFileName","lineNumber","columnNumber","wrap","map","i","name","img","image","rank","trust_score_rank","url","_c","$RefreshReg$"],"sources":["C:/Users/nanda/Documents/GitHub/crypto-react-app/src/components/Exchanges.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { server } from '../index';\r\nimport {\r\n    Container,\r\n    HStack,\r\n} from '@chakra-ui/react';\r\nimport Loader from './Loader.jsx'\r\nimport ExchangeCard from './ExchangeCard.jsx'\r\nconst Exchanges = () => {\r\n\r\n    const [exchanges, setExchanges] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    useEffect(() => {\r\n        const fetchExchanges = async () => {\r\n            try {\r\n                const { data } = await axios.get(`${server}/exchanges`);\r\n                setExchanges(data);\r\n            } catch (error) {\r\n                setError(true)\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchExchanges();\r\n    }, [])\r\n\r\n    return (\r\n        <Container maxW={'container.xl'}>{loading ? <Loader /> : <HStack\r\n            wrap={'wrap'}\r\n        >{\r\n                exchanges.map((i) => (<ExchangeCard\r\n                    name={i.name}\r\n                    img={i.image}\r\n                    rank={i.trust_score_rank}\r\n                    url={i.url}\r\n                />))\r\n            }</HStack>}</Container>\r\n    )\r\n}\r\nexport default Exchanges"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AACjC,SACIC,SAAS,EACTC,MAAM,QACH,kBAAkB;AACzB,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,YAAY,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACzCD,SAAS,CAAC,MAAM;IACZ,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEjB,MAAO,YAAW,CAAC;QACvDU,YAAY,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZC,QAAQ,CAAC,IAAI,CAAC;MAClB;MACAF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDG,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACL,SAAS;IAACiB,IAAI,EAAE,cAAe;IAAAC,QAAA,EAAER,OAAO,gBAAGL,OAAA,CAACH,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGjB,OAAA,CAACJ,MAAM;MAC5DsB,IAAI,EAAE,MAAO;MAAAL,QAAA,EAETV,SAAS,CAACgB,GAAG,CAAEC,CAAC,iBAAMpB,OAAA,CAACF,YAAY;QAC/BuB,IAAI,EAAED,CAAC,CAACC,IAAK;QACbC,GAAG,EAAEF,CAAC,CAACG,KAAM;QACbC,IAAI,EAAEJ,CAAC,CAACK,gBAAiB;QACzBC,GAAG,EAAEN,CAAC,CAACM;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAEnC,CAAC;AAAAf,EAAA,CA9BKD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA+Bf,eAAeA,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}